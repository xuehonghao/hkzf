{"version":3,"sources":["utils/axios.js","utils/currentCity.js","pages/profile/index.js","pages/profile/index.module.css","utils/api/area/index.js","utils/api/user/index.js"],"names":["BaseURL","api","axios","create","baseURL","interceptors","request","use","config","url","headers","startsWith","includes","authorization","getToken","loading","error","Promise","reject","response","res","status","data","description","body","hide","setToken","localStorage","setItem","getItem","removeToken","removeItem","isAuth","setSession","sessionStorage","JSON","stringify","getSession","currCity","parse","getCurrCity","a","currCityByLocal","resolve","window","BMap","LocalCity","get","result","name","currCityByMap","resove","getCityInfo","menus","id","iconfont","to","DEFAULT_AVATAR","BASE_URL","alert","Profile","state","isLogin","userInfo","getUserInfo","console","log","avatar","setState","info","logout","text","onPress","this","props","history","location","nickname","className","styles","title","bg","src","alt","myIcon","user","auth","onClick","edit","arrow","type","size","inline","push","pathname","backUrl","root","renderUser","columnNum","hasLine","renderItem","item","menuItem","ad","Component","module","exports","params","getCities","level","getHotCity","getCommunity","getMapHouses","login","username","password","post","getHousesFav","delFav","delete","addFav","getUserHouses","pubHouse"],"mappings":"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","file":"static/js/22.09215b59.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Toast } from \"antd-mobile\";\nimport { getToken } from \"./currentCity\";\n\n// 基地址\nconst BaseURL = \"https://api-haoke-web.itheima.net\";\n\nconst api = axios.create({\n  baseURL: BaseURL,\n});\n\n// Add a request interceptor  请求拦截器\napi.interceptors.request.use(\n  function (config) {\n    const { url, headers } = config;\n    const list = [\"/user/registered\", \"/user/login\"]; // 白名单\n\n    if (url.startsWith(\"/user\") && !list.includes(url)) {\n      // 设置公共请求头\n      headers.authorization = getToken();\n    }\n\n    // 动画加载\n    Toast.loading(\"加载中...\", 0);\n    // Do something before request is sent\n    return config;\n  },\n  function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor  响应拦截器\napi.interceptors.response.use(\n  function (response) {\n    // 简化返回结果\n    let res = {\n      status: response.data.status,\n      description: response.data.description,\n      data: response.data.body,\n    };\n    // 动画结束\n    Toast.hide();\n    return res;\n  },\n  function (error) {\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    // Do something with response error\n    return Promise.reject(error);\n  }\n);\n\nexport default api;\nexport { BaseURL };\n","import { getCityInfo } from \"./api/area\";\n\nconst CURR_CITY = \"currCity\"; // 当前城市\nconst USER_TOKEN = \"token\";\n\n// 设置Token\nconst setToken = (data) => {\n  localStorage.setItem(USER_TOKEN, data);\n};\n\n// 获取Token\nconst getToken = () => {\n  let token = localStorage.getItem(USER_TOKEN);\n  return token;\n};\n\n// 删除Token\nconst removeToken = () => {\n  localStorage.removeItem(USER_TOKEN);\n};\n\n// 是否登录判断：boolean\nconst isAuth = () => !!getToken();\n\n// 设置当前城市\nconst setSession = (data) => {\n  sessionStorage.setItem(CURR_CITY, JSON.stringify(data));\n};\n\n// 获取当前城市\nconst getSession = () => {\n  let currCity = sessionStorage.getItem(CURR_CITY);\n  if (!!!currCity) return null;\n  return JSON.parse(currCity);\n};\n\n// 删除当前城市\n// const removeSession = () => {\n//   sessionStorage.removeItem(CURR_CITY);\n// };\n\n// 百度获取\nconst getCurrCityByMap = () => {\n  return new Promise((resolve, reject) => {\n    // 使用百度地图LocalCity获取当前的城市名称\n    const myCity = new window.BMap.LocalCity();\n    myCity.get((result) => {\n      // 根据百度地图获取到城市名字，调用后台接口获取当前城市的详细数据\n      resolve(result.name);\n    });\n  });\n};\n\n// 获取当前城市信息\nconst getCurrCity = async () => {\n  // 内存中找\n  const currCityByLocal = getSession();\n\n  // 定位\n  const currCityByMap = await getCurrCityByMap();\n  // 内存中没有 || 内存中有键没值 || 定位和内存中的值不匹配  这样判断，手动切换城市就会有bug\n  // if (\n  //   !currCityByLocal ||\n  //   !currCityByLocal.label ||\n  //   !currCityByMap.includes(currCityByLocal.label)\n  // ) {\n\n  if (!currCityByLocal) {\n    return new Promise(async (resove, reject) => {\n      // 调用接口获取城市详细信息\n      const { status, data } = await getCityInfo(currCityByMap);\n      if (status === 200) {\n        // 存到本地\n        setSession(data);\n        // 传递数据\n        resove(data);\n      } else {\n        reject(\"error\");\n      }\n    });\n  } else {\n    // 如果有，返回本地存储获取的信息\n    return Promise.resolve(currCityByLocal);\n  }\n};\n\nexport {\n  getCurrCity,\n  setSession,\n  CURR_CITY,\n  setToken,\n  getToken,\n  removeToken,\n  isAuth,\n};\n","import React, { Component } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport { Modal, Grid, Button, Toast } from \"antd-mobile\";\n\nimport { BaseURL as BASE_URL } from \"../../utils/axios\";\n\nimport styles from \"./index.module.css\";\nimport { isAuth, removeToken } from \"../../utils/currentCity\";\nimport { getUserInfo, logout } from \"../../utils/api/user\";\n\n// 菜单数据\nconst menus = [\n  { id: 1, name: \"我的收藏\", iconfont: \"icon-coll\", to: \"/favorate\" },\n  { id: 2, name: \"我的出租\", iconfont: \"icon-ind\", to: \"/rent\" },\n  { id: 3, name: \"看房记录\", iconfont: \"icon-record\" },\n  {\n    id: 4,\n    name: \"成为房主\",\n    iconfont: \"icon-identity\",\n  },\n  { id: 5, name: \"个人资料\", iconfont: \"icon-myinfo\" },\n  { id: 6, name: \"联系我们\", iconfont: \"icon-cust\" },\n];\n\n// 默认头像\nconst DEFAULT_AVATAR = BASE_URL + \"/img/profile/avatar.png\";\n\nconst alert = Modal.alert;\n\nexport default class Profile extends Component {\n  state = {\n    isLogin: isAuth(),\n    userInfo: {},\n  };\n\n  componentDidMount() {\n    this.getUserInfo();\n  }\n\n  // 获取用户数据\n  getUserInfo = async () => {\n    const { isLogin } = this.state;\n    // debugger;\n    if (isLogin) {\n      let res = await getUserInfo();\n      console.log(res);\n      if (res.status === 200) {\n        // 处理图片路径\n        res.data.avatar = BASE_URL + res.data.avatar;\n        this.setState({\n          userInfo: res.data,\n        });\n      } else {\n        this.setState({\n          isLogin: false,\n        });\n        Toast.info(res.description);\n      }\n    }\n  };\n\n  // 退出登录\n  logout = () => {\n    alert(\"提示\", \"确定退出吗？\", [\n      { text: \"取消\" },\n      {\n        text: \"确定\",\n        onPress: async () => {\n          let res = await logout();\n          console.log(res);\n          if (res.status === 200) {\n            removeToken();\n            this.setState({\n              isLogin: false,\n              userInfo: {},\n            });\n          } else {\n            Toast.info(res.description);\n          }\n        },\n      },\n    ]);\n  };\n\n  // 渲染用户信息\n  renderUser() {\n    const { history, location } = this.props;\n    const {\n      userInfo: { nickname, avatar },\n    } = this.state;\n    return (\n      <div className={styles.title}>\n        <img\n          className={styles.bg}\n          src={BASE_URL + \"/img/profile/bg.png\"}\n          alt=\"背景图\"\n        />\n        <div className={styles.info}>\n          <div className={styles.myIcon}>\n            <img\n              className={styles.avatar}\n              src={avatar || DEFAULT_AVATAR}\n              alt=\"icon\"\n            />\n          </div>\n          <div className={styles.user}>\n            <div className={styles.name}>{nickname || \"游客\"}</div>\n            {this.state.isLogin ? (\n              <>\n                <div className={styles.auth}>\n                  <span onClick={this.logout}>退出</span>\n                </div>\n                <div className={styles.edit}>\n                  编辑个人资料\n                  <span className={styles.arrow}>\n                    <i className=\"iconfont icon-arrow\" />\n                  </span>\n                </div>\n              </>\n            ) : (\n              <div className={styles.edit}>\n                <Button\n                  type=\"primary\"\n                  size=\"small\"\n                  inline\n                  onClick={() =>\n                    history.push({\n                      pathname: \"/login\",\n                      backUrl: location.pathname,\n                    })\n                  }\n                >\n                  去登录\n                </Button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className={styles.root}>\n        {/* 个人信息 */}\n        {this.renderUser()}\n\n        {/* 九宫格菜单 */}\n        <Grid\n          data={menus}\n          columnNum={3}\n          hasLine={false}\n          renderItem={(item) =>\n            item.to ? (\n              <Link to={item.to}>\n                <div className={styles.menuItem}>\n                  <i className={`iconfont ${item.iconfont}`} />\n                  <span>{item.name}</span>\n                </div>\n              </Link>\n            ) : (\n              <div className={styles.menuItem}>\n                <i className={`iconfont ${item.iconfont}`} />\n                <span>{item.name}</span>\n              </div>\n            )\n          }\n        />\n\n        {/* 加入我们 */}\n        <div className={styles.ad}>\n          <img src={BASE_URL + \"/img/profile/join.png\"} alt=\"\" />\n        </div>\n      </div>\n    );\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"profile_root__1CnB4\",\"title\":\"profile_title__29pUq\",\"bg\":\"profile_bg__1Lcax\",\"info\":\"profile_info__1cIYU\",\"auth\":\"profile_auth__1XLSo\",\"user\":\"profile_user__HV1sY\",\"myIcon\":\"profile_myIcon__2XBnO\",\"avatar\":\"profile_avatar__jbVzv\",\"name\":\"profile_name__3qC8A\",\"edit\":\"profile_edit__3344L\",\"arrow\":\"profile_arrow__izVhY\",\"ad\":\"profile_ad__34yGn\",\"menuItem\":\"profile_menuItem__1bizb\"};","import api from \"../../axios\";\n\n// 根据城市名称查询该城市的信息\nconst getCityInfo = (name) => {\n  return api.get(\"/area/info\", {\n    params: {\n      name,\n    },\n  });\n};\n\n// 获取城市列表数据\nconst getCities = (level = 1) => {\n  return api.get(\"/area/city\", {\n    params: {\n      level,\n    },\n  });\n};\n\n// 获取热门城市\nconst getHotCity = () => {\n  return api.get(\"/area/hot\");\n};\n\n// 小区关键词查询\nconst getCommunity = (name, id) => {\n  return api.get(\"/area/community\", {\n    params: {\n      name,\n      id,\n    },\n  });\n};\n\n// 查询房源数据\nconst getMapHouses = (id) => {\n  return api.get(\"/area/map\", {\n    params: {\n      id,\n    },\n  });\n};\n\nexport { getCityInfo, getCities, getHotCity, getCommunity, getMapHouses };\n","import api from \"../../axios\";\n\n// 用户登录接口\nconst login = (username, password) => {\n  return api.post(\"/user/login\", {\n    username,\n    password,\n  });\n};\n\n// 获取用户的信息资料\nconst getUserInfo = () => {\n  return api.get(\"/user\");\n};\n\n// 用户退出登录\nconst logout = () => {\n  return api.post(\"/user/logout\");\n};\n\n// 房屋是否收藏\nconst getHousesFav = (id) => {\n  return api.get(`/user/favorites/${id}`);\n};\n\n// 删除收藏\nconst delFav = (id) => {\n  return api.delete(`/user/favorites/${id}`);\n};\n\n// 添加收藏\nconst addFav = (id) => {\n  return api.post(`/user/favorites/${id}`);\n};\n\n// 查看已发布房源列表\nconst getUserHouses = () => {\n  return api.get(\"/user/houses\");\n};\n\n// 发布房源\nconst pubHouse = (body) => {\n  return api.post(\"/user/houses\", {\n    ...body,\n  });\n};\n\nexport {\n  login,\n  getUserInfo,\n  logout,\n  getHousesFav,\n  delFav,\n  addFav,\n  getUserHouses,\n  pubHouse,\n};\n"],"sourceRoot":""}