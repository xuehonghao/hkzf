{"version":3,"sources":["pages/Login/index.module.css","utils/axios.js","utils/currentCity.js","pages/Login/index.js","utils/api/area/index.js","utils/api/user/index.js"],"names":["module","exports","BaseURL","api","axios","create","baseURL","interceptors","request","use","config","url","headers","startsWith","includes","authorization","getToken","loading","error","Promise","reject","response","res","status","data","description","body","hide","setToken","localStorage","setItem","getItem","removeToken","removeItem","isAuth","setSession","sessionStorage","JSON","stringify","getSession","currCity","parse","getCurrCity","a","currCityByLocal","resolve","window","BMap","LocalCity","get","result","name","currCityByMap","resove","getCityInfo","Login","state","username","password","this","props","values","errors","handleChange","handleSubmit","className","styles","root","mode","icon","type","onLeftClick","history","goBack","size","onSubmit","formItem","input","placeholder","value","onChange","formSubmit","submit","backHome","Item","to","Component","withFormik","mapPropsToValues","validationSchema","yup","shape","required","matches","formikBag","login","location","token","success","backUrl","replace","fail","params","getCities","level","getHotCity","getCommunity","id","getMapHouses","post","getUserInfo","logout","getHousesFav","delFav","delete","addFav","getUserHouses","pubHouse"],"mappings":"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","file":"static/js/16.82df1ac5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Login_root__1f_2t\",\"navHeader\":\"Login_navHeader__3GdtP\",\"backHome\":\"Login_backHome__tQGt1\",\"formItem\":\"Login_formItem__PRBa4\",\"input\":\"Login_input__1bMki\",\"formSubmit\":\"Login_formSubmit__2HnWt\",\"submit\":\"Login_submit__ybLU9\",\"error\":\"Login_error__1peny\"};","import axios from \"axios\";\r\nimport { Toast } from \"antd-mobile\";\r\nimport { getToken } from \"./currentCity\";\r\n\r\n// 基地址\r\nconst BaseURL = \"https://api-haoke-web.itheima.net\";\r\n\r\nconst api = axios.create({\r\n  baseURL: BaseURL,\r\n});\r\n\r\n// Add a request interceptor  请求拦截器\r\napi.interceptors.request.use(\r\n  function (config) {\r\n    const { url, headers } = config;\r\n    const list = [\"/user/registered\", \"/user/login\"]; // 白名单\r\n\r\n    if (url.startsWith(\"/user\") && !list.includes(url)) {\r\n      // 设置公共请求头\r\n      headers.authorization = getToken();\r\n    }\r\n\r\n    // 动画加载\r\n    Toast.loading(\"加载中...\", 0);\r\n    // Do something before request is sent\r\n    return config;\r\n  },\r\n  function (error) {\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add a response interceptor  响应拦截器\r\napi.interceptors.response.use(\r\n  function (response) {\r\n    // 简化返回结果\r\n    let res = {\r\n      status: response.data.status,\r\n      description: response.data.description,\r\n      data: response.data.body,\r\n    };\r\n    // 动画结束\r\n    Toast.hide();\r\n    return res;\r\n  },\r\n  function (error) {\r\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n    // Do something with response error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\nexport { BaseURL };\r\n","import { getCityInfo } from \"./api/area\";\r\n\r\nconst CURR_CITY = \"currCity\"; // 当前城市\r\nconst USER_TOKEN = \"token\";\r\n\r\n// 设置Token\r\nconst setToken = (data) => {\r\n  localStorage.setItem(USER_TOKEN, data);\r\n};\r\n\r\n// 获取Token\r\nconst getToken = () => {\r\n  let token = localStorage.getItem(USER_TOKEN);\r\n  return token;\r\n};\r\n\r\n// 删除Token\r\nconst removeToken = () => {\r\n  localStorage.removeItem(USER_TOKEN);\r\n};\r\n\r\n// 是否登录判断：boolean\r\nconst isAuth = () => !!getToken();\r\n\r\n// 设置当前城市\r\nconst setSession = (data) => {\r\n  sessionStorage.setItem(CURR_CITY, JSON.stringify(data));\r\n};\r\n\r\n// 获取当前城市\r\nconst getSession = () => {\r\n  let currCity = sessionStorage.getItem(CURR_CITY);\r\n  if (!!!currCity) return null;\r\n  return JSON.parse(currCity);\r\n};\r\n\r\n// 删除当前城市\r\n// const removeSession = () => {\r\n//   sessionStorage.removeItem(CURR_CITY);\r\n// };\r\n\r\n// 百度获取\r\nconst getCurrCityByMap = () => {\r\n  return new Promise((resolve, reject) => {\r\n    // 使用百度地图LocalCity获取当前的城市名称\r\n    const myCity = new window.BMap.LocalCity();\r\n    myCity.get((result) => {\r\n      // 根据百度地图获取到城市名字，调用后台接口获取当前城市的详细数据\r\n      resolve(result.name);\r\n    });\r\n  });\r\n};\r\n\r\n// 获取当前城市信息\r\nconst getCurrCity = async () => {\r\n  // 内存中找\r\n  const currCityByLocal = getSession();\r\n\r\n  // 定位\r\n  const currCityByMap = await getCurrCityByMap();\r\n  // 内存中没有 || 内存中有键没值 || 定位和内存中的值不匹配  这样判断，手动切换城市就会有bug\r\n  // if (\r\n  //   !currCityByLocal ||\r\n  //   !currCityByLocal.label ||\r\n  //   !currCityByMap.includes(currCityByLocal.label)\r\n  // ) {\r\n\r\n  if (!currCityByLocal) {\r\n    return new Promise(async (resove, reject) => {\r\n      // 调用接口获取城市详细信息\r\n      const { status, data } = await getCityInfo(currCityByMap);\r\n      if (status === 200) {\r\n        // 存到本地\r\n        setSession(data);\r\n        // 传递数据\r\n        resove(data);\r\n      } else {\r\n        reject(\"error\");\r\n      }\r\n    });\r\n  } else {\r\n    // 如果有，返回本地存储获取的信息\r\n    return Promise.resolve(currCityByLocal);\r\n  }\r\n};\r\n\r\nexport {\r\n  getCurrCity,\r\n  setSession,\r\n  CURR_CITY,\r\n  setToken,\r\n  getToken,\r\n  removeToken,\r\n  isAuth,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Flex, WingBlank, WhiteSpace, NavBar, Toast, Icon } from \"antd-mobile\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./index.module.css\";\r\nimport { login } from \"../../utils/api/user\";\r\nimport { setToken } from \"../../utils/currentCity\";\r\nimport { withFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n// 验证规则：\r\nconst REG_UNAME = /^[a-zA-Z_\\d]{5,8}$/;\r\nconst REG_PWD = /^[a-zA-Z_\\d]{5,12}$/;\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    username: \"\", // 用户名\r\n    password: \"\", // 密码\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      values,\r\n      // touched,\r\n      errors,\r\n      handleChange,\r\n      handleSubmit,\r\n    } = this.props;\r\n    return (\r\n      <div className={styles.root}>\r\n        {/* 顶部导航 */}\r\n        <NavBar\r\n          mode=\"light\"\r\n          icon={<Icon type=\"left\" />}\r\n          onLeftClick={() => this.props.history.goBack()}\r\n        >\r\n          账号登录\r\n        </NavBar>\r\n        <WhiteSpace size=\"xl\" />\r\n\r\n        {/* 登录表单 */}\r\n        <WingBlank>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className={styles.formItem}>\r\n              <input\r\n                className={styles.input}\r\n                name=\"username\"\r\n                placeholder=\"请输入账号\"\r\n                value={values.username}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            {/* 长度为5到8位，只能出现数字、字母、下划线 */}\r\n            {errors.username && (\r\n              <div className={styles.error}>{errors.username}</div>\r\n            )}\r\n            <div className={styles.formItem}>\r\n              <input\r\n                className={styles.input}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"请输入密码\"\r\n                value={values.password}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            {/* 长度为5到12位，只能出现数字、字母、下划线 */}\r\n            {errors.password && (\r\n              <div className={styles.error}>{errors.password}</div>\r\n            )}\r\n            <div className={styles.formSubmit}>\r\n              <button className={styles.submit} type=\"submit\">\r\n                登 录\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <Flex className={styles.backHome}>\r\n            <Flex.Item>\r\n              <Link to=\"/registe\">还没有账号，去注册~</Link>\r\n            </Flex.Item>\r\n          </Flex>\r\n        </WingBlank>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFormik({\r\n  // 提供表单的状态数据和当前表单的input的name属性值一一对应\r\n  mapPropsToValues: () => ({ username: \"test2\", password: \"test2\" }),\r\n\r\n  // 验证表单\r\n  validationSchema: yup.object().shape({\r\n    username: yup\r\n      .string()\r\n      .required(\"账号为必填项！\")\r\n      .matches(REG_UNAME, \"账号长度为5到8位，只能出现数字、字母、下划线\"),\r\n    password: yup\r\n      .string()\r\n      .required(\"密码为必填项！\")\r\n      .matches(REG_PWD, \"密码长度为5到12位，只能出现数字、字母、下划线\"),\r\n  }),\r\n\r\n  // 处理表单提交\r\n  // handleSubmit: (values: Values, formikBag: FormikBag) => void | Promise<any>\r\n  handleSubmit: async (values, formikBag) => {\r\n    const { username, password } = values;\r\n    const res = await login(username, password);\r\n    const { status, data, description } = res;\r\n    const { history, location } = formikBag.props;\r\n    if (status === 200) {\r\n      // 把token存到本地\r\n      setToken(data.token);\r\n      Toast.success(description, 2);\r\n      if (!!location.backUrl) {\r\n        history.replace(location.backUrl);\r\n      } else {\r\n        history.replace(\"/\");\r\n      }\r\n    } else {\r\n      Toast.fail(description);\r\n    }\r\n  },\r\n})(Login);\r\n","import api from \"../../axios\";\r\n\r\n// 根据城市名称查询该城市的信息\r\nconst getCityInfo = (name) => {\r\n  return api.get(\"/area/info\", {\r\n    params: {\r\n      name,\r\n    },\r\n  });\r\n};\r\n\r\n// 获取城市列表数据\r\nconst getCities = (level = 1) => {\r\n  return api.get(\"/area/city\", {\r\n    params: {\r\n      level,\r\n    },\r\n  });\r\n};\r\n\r\n// 获取热门城市\r\nconst getHotCity = () => {\r\n  return api.get(\"/area/hot\");\r\n};\r\n\r\n// 小区关键词查询\r\nconst getCommunity = (name, id) => {\r\n  return api.get(\"/area/community\", {\r\n    params: {\r\n      name,\r\n      id,\r\n    },\r\n  });\r\n};\r\n\r\n// 查询房源数据\r\nconst getMapHouses = (id) => {\r\n  return api.get(\"/area/map\", {\r\n    params: {\r\n      id,\r\n    },\r\n  });\r\n};\r\n\r\nexport { getCityInfo, getCities, getHotCity, getCommunity, getMapHouses };\r\n","import api from \"../../axios\";\r\n\r\n// 用户登录接口\r\nconst login = (username, password) => {\r\n  return api.post(\"/user/login\", {\r\n    username,\r\n    password,\r\n  });\r\n};\r\n\r\n// 获取用户的信息资料\r\nconst getUserInfo = () => {\r\n  return api.get(\"/user\");\r\n};\r\n\r\n// 用户退出登录\r\nconst logout = () => {\r\n  return api.post(\"/user/logout\");\r\n};\r\n\r\n// 房屋是否收藏\r\nconst getHousesFav = (id) => {\r\n  return api.get(`/user/favorites/${id}`);\r\n};\r\n\r\n// 删除收藏\r\nconst delFav = (id) => {\r\n  return api.delete(`/user/favorites/${id}`);\r\n};\r\n\r\n// 添加收藏\r\nconst addFav = (id) => {\r\n  return api.post(`/user/favorites/${id}`);\r\n};\r\n\r\n// 查看已发布房源列表\r\nconst getUserHouses = () => {\r\n  return api.get(\"/user/houses\");\r\n};\r\n\r\n// 发布房源\r\nconst pubHouse = (body) => {\r\n  return api.post(\"/user/houses\", {\r\n    ...body,\r\n  });\r\n};\r\n\r\nexport {\r\n  login,\r\n  getUserInfo,\r\n  logout,\r\n  getHousesFav,\r\n  delFav,\r\n  addFav,\r\n  getUserHouses,\r\n  pubHouse,\r\n};\r\n"],"sourceRoot":""}