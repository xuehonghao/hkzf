{"version":3,"sources":["pages/Login/index.module.css","utils/axios.js","utils/currentCity.js","utils/api/area/index.js","pages/Login/index.js","utils/api/user/index.js"],"names":["module","exports","BaseURL","api","axios","create","baseURL","interceptors","request","use","config","url","headers","startsWith","includes","authorization","getToken","loading","error","Promise","reject","response","res","status","data","description","body","hide","setToken","localStorage","setItem","getItem","removeToken","removeItem","isAuth","setSession","sessionStorage","JSON","stringify","getSession","currCity","parse","getCurrCity","a","currCityByLocal","resolve","window","BMap","LocalCity","get","result","name","currCityByMap","resove","getCityInfo","params","getCities","level","getHotCity","getCommunity","id","getMapHouses","Login","state","username","password","this","props","values","errors","handleChange","handleSubmit","className","styles","root","mode","icon","type","onLeftClick","history","goBack","size","onSubmit","formItem","input","placeholder","value","onChange","formSubmit","submit","backHome","Item","to","Component","withFormik","mapPropsToValues","validationSchema","yup","shape","required","matches","formikBag","login","location","token","success","backUrl","replace","fail","post","getUserInfo","logout","getHousesFav","delFav","delete","addFav","getUserHouses","pubHouse"],"mappings":"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","file":"static/js/21.d060d8d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Login_root__xpMLV\",\"navHeader\":\"Login_navHeader__15hA9\",\"backHome\":\"Login_backHome__uoXiv\",\"formItem\":\"Login_formItem__2h67j\",\"input\":\"Login_input__2pNlW\",\"formSubmit\":\"Login_formSubmit__13nn8\",\"submit\":\"Login_submit__3Xx64\",\"error\":\"Login_error__WN4FS\"};","import axios from \"axios\";\nimport { Toast } from \"antd-mobile\";\nimport { getToken } from \"./currentCity\";\n\n// 基地址\nconst BaseURL = \"https://api-haoke-web.itheima.net\";\n\nconst api = axios.create({\n  baseURL: BaseURL,\n});\n\n// Add a request interceptor  请求拦截器\napi.interceptors.request.use(\n  function (config) {\n    const { url, headers } = config;\n    const list = [\"/user/registered\", \"/user/login\"]; // 白名单\n\n    if (url.startsWith(\"/user\") && !list.includes(url)) {\n      // 设置公共请求头\n      headers.authorization = getToken();\n    }\n\n    // 动画加载\n    Toast.loading(\"加载中...\", 0);\n    // Do something before request is sent\n    return config;\n  },\n  function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor  响应拦截器\napi.interceptors.response.use(\n  function (response) {\n    // 简化返回结果\n    let res = {\n      status: response.data.status,\n      description: response.data.description,\n      data: response.data.body,\n    };\n    // 动画结束\n    Toast.hide();\n    return res;\n  },\n  function (error) {\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    // Do something with response error\n    return Promise.reject(error);\n  }\n);\n\nexport default api;\nexport { BaseURL };\n","import { getCityInfo } from \"./api/area\";\n\nconst CURR_CITY = \"currCity\"; // 当前城市\nconst USER_TOKEN = \"token\";\n\n// 设置Token\nconst setToken = (data) => {\n  localStorage.setItem(USER_TOKEN, data);\n};\n\n// 获取Token\nconst getToken = () => {\n  let token = localStorage.getItem(USER_TOKEN);\n  return token;\n};\n\n// 删除Token\nconst removeToken = () => {\n  localStorage.removeItem(USER_TOKEN);\n};\n\n// 是否登录判断：boolean\nconst isAuth = () => !!getToken();\n\n// 设置当前城市\nconst setSession = (data) => {\n  sessionStorage.setItem(CURR_CITY, JSON.stringify(data));\n};\n\n// 获取当前城市\nconst getSession = () => {\n  let currCity = sessionStorage.getItem(CURR_CITY);\n  if (!!!currCity) return null;\n  return JSON.parse(currCity);\n};\n\n// 删除当前城市\n// const removeSession = () => {\n//   sessionStorage.removeItem(CURR_CITY);\n// };\n\n// 百度获取\nconst getCurrCityByMap = () => {\n  return new Promise((resolve, reject) => {\n    // 使用百度地图LocalCity获取当前的城市名称\n    const myCity = new window.BMap.LocalCity();\n    myCity.get((result) => {\n      // 根据百度地图获取到城市名字，调用后台接口获取当前城市的详细数据\n      resolve(result.name);\n    });\n  });\n};\n\n// 获取当前城市信息\nconst getCurrCity = async () => {\n  // 内存中找\n  const currCityByLocal = getSession();\n\n  // 定位\n  const currCityByMap = await getCurrCityByMap();\n  // 内存中没有 || 内存中有键没值 || 定位和内存中的值不匹配  这样判断，手动切换城市就会有bug\n  // if (\n  //   !currCityByLocal ||\n  //   !currCityByLocal.label ||\n  //   !currCityByMap.includes(currCityByLocal.label)\n  // ) {\n\n  if (!currCityByLocal) {\n    return new Promise(async (resove, reject) => {\n      // 调用接口获取城市详细信息\n      const { status, data } = await getCityInfo(currCityByMap);\n      if (status === 200) {\n        // 存到本地\n        setSession(data);\n        // 传递数据\n        resove(data);\n      } else {\n        reject(\"error\");\n      }\n    });\n  } else {\n    // 如果有，返回本地存储获取的信息\n    return Promise.resolve(currCityByLocal);\n  }\n};\n\nexport {\n  getCurrCity,\n  setSession,\n  CURR_CITY,\n  setToken,\n  getToken,\n  removeToken,\n  isAuth,\n};\n","import api from \"../../axios\";\n\n// 根据城市名称查询该城市的信息\nconst getCityInfo = (name) => {\n  return api.get(\"/area/info\", {\n    params: {\n      name,\n    },\n  });\n};\n\n// 获取城市列表数据\nconst getCities = (level = 1) => {\n  return api.get(\"/area/city\", {\n    params: {\n      level,\n    },\n  });\n};\n\n// 获取热门城市\nconst getHotCity = () => {\n  return api.get(\"/area/hot\");\n};\n\n// 小区关键词查询\nconst getCommunity = (name, id) => {\n  return api.get(\"/area/community\", {\n    params: {\n      name,\n      id,\n    },\n  });\n};\n\n// 查询房源数据\nconst getMapHouses = (id) => {\n  return api.get(\"/area/map\", {\n    params: {\n      id,\n    },\n  });\n};\n\nexport { getCityInfo, getCities, getHotCity, getCommunity, getMapHouses };\n","import React, { Component } from \"react\";\nimport { Flex, WingBlank, WhiteSpace, NavBar, Toast, Icon } from \"antd-mobile\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./index.module.css\";\nimport { login } from \"../../utils/api/user\";\nimport { setToken } from \"../../utils/currentCity\";\nimport { withFormik } from \"formik\";\nimport * as yup from \"yup\";\n\n// 验证规则：\nconst REG_UNAME = /^[a-zA-Z_\\d]{5,8}$/;\nconst REG_PWD = /^[a-zA-Z_\\d]{5,12}$/;\n\nclass Login extends Component {\n  state = {\n    username: \"\", // 用户名\n    password: \"\", // 密码\n  };\n\n  render() {\n    const {\n      values,\n      // touched,\n      errors,\n      handleChange,\n      handleSubmit,\n    } = this.props;\n    return (\n      <div className={styles.root}>\n        {/* 顶部导航 */}\n        <NavBar\n          mode=\"light\"\n          icon={<Icon type=\"left\" />}\n          onLeftClick={() => this.props.history.goBack()}\n        >\n          账号登录\n        </NavBar>\n        <WhiteSpace size=\"xl\" />\n\n        {/* 登录表单 */}\n        <WingBlank>\n          <form onSubmit={handleSubmit}>\n            <div className={styles.formItem}>\n              <input\n                className={styles.input}\n                name=\"username\"\n                placeholder=\"请输入账号\"\n                value={values.username}\n                onChange={handleChange}\n              />\n            </div>\n            {/* 长度为5到8位，只能出现数字、字母、下划线 */}\n            {errors.username && (\n              <div className={styles.error}>{errors.username}</div>\n            )}\n            <div className={styles.formItem}>\n              <input\n                className={styles.input}\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"请输入密码\"\n                value={values.password}\n                onChange={handleChange}\n              />\n            </div>\n            {/* 长度为5到12位，只能出现数字、字母、下划线 */}\n            {errors.password && (\n              <div className={styles.error}>{errors.password}</div>\n            )}\n            <div className={styles.formSubmit}>\n              <button className={styles.submit} type=\"submit\">\n                登 录\n              </button>\n            </div>\n          </form>\n          <Flex className={styles.backHome}>\n            <Flex.Item>\n              <Link to=\"/registe\">还没有账号，去注册~</Link>\n            </Flex.Item>\n          </Flex>\n        </WingBlank>\n      </div>\n    );\n  }\n}\n\nexport default withFormik({\n  // 提供表单的状态数据和当前表单的input的name属性值一一对应\n  mapPropsToValues: () => ({ username: \"test2\", password: \"test2\" }),\n\n  // 验证表单\n  validationSchema: yup.object().shape({\n    username: yup\n      .string()\n      .required(\"账号为必填项！\")\n      .matches(REG_UNAME, \"账号长度为5到8位，只能出现数字、字母、下划线\"),\n    password: yup\n      .string()\n      .required(\"密码为必填项！\")\n      .matches(REG_PWD, \"密码长度为5到12位，只能出现数字、字母、下划线\"),\n  }),\n\n  // 处理表单提交\n  // handleSubmit: (values: Values, formikBag: FormikBag) => void | Promise<any>\n  handleSubmit: async (values, formikBag) => {\n    const { username, password } = values;\n    const res = await login(username, password);\n    const { status, data, description } = res;\n    const { history, location } = formikBag.props;\n    if (status === 200) {\n      // 把token存到本地\n      setToken(data.token);\n      Toast.success(description, 2);\n      if (!!location.backUrl) {\n        history.replace(location.backUrl);\n      } else {\n        history.replace(\"/\");\n      }\n    } else {\n      Toast.fail(description);\n    }\n  },\n})(Login);\n","import api from \"../../axios\";\n\n// 用户登录接口\nconst login = (username, password) => {\n  return api.post(\"/user/login\", {\n    username,\n    password,\n  });\n};\n\n// 获取用户的信息资料\nconst getUserInfo = () => {\n  return api.get(\"/user\");\n};\n\n// 用户退出登录\nconst logout = () => {\n  return api.post(\"/user/logout\");\n};\n\n// 房屋是否收藏\nconst getHousesFav = (id) => {\n  return api.get(`/user/favorites/${id}`);\n};\n\n// 删除收藏\nconst delFav = (id) => {\n  return api.delete(`/user/favorites/${id}`);\n};\n\n// 添加收藏\nconst addFav = (id) => {\n  return api.post(`/user/favorites/${id}`);\n};\n\n// 查看已发布房源列表\nconst getUserHouses = () => {\n  return api.get(\"/user/houses\");\n};\n\n// 发布房源\nconst pubHouse = (body) => {\n  return api.post(\"/user/houses\", {\n    ...body,\n  });\n};\n\nexport {\n  login,\n  getUserInfo,\n  logout,\n  getHousesFav,\n  delFav,\n  addFav,\n  getUserHouses,\n  pubHouse,\n};\n"],"sourceRoot":""}